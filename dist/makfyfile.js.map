{"version":3,"sources":["../src/makfyfile.js"],"names":["paths","npm","makfy","commands","startDev","desc","args","inspect","type","run","exec","util","wpConfPath","fixPath","stratokit","setEnvVar","writeConfig","_","pkgPath","root","oldPkg","require","name","appName","pkg","names","forEach","Object","keys","sort","k","writeFile","JSON","stringify"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;;;AAEA;AACA,MAAM,EAACA,KAAD,EAAQC,GAAR,EAAaC,KAAb,qBAAN;;AAEO,MAAMC;AACZC,WAAU;AACTC,QAAM,oCADG;AAETC,QAAM;AACLC,YAAS;AACRC,UAAM,MADE;AAERH,UAAM;AAFE;AADJ,GAFG;AAQTI,OAAK,OAAOC,IAAP,EAAaJ,IAAb,EAAmBK,IAAnB,KAA4B;AAChC,SAAMC,aAAaD,KAAKE,OAAL,CACjB,GAAEb,MAAMc,SAAU,yCADD,CAAnB;AAGA,SAAMJ,KACLC,KAAKI,SAAL,CAAe,UAAf,EAA2B,aAA3B,CADK,EAELT,KAAKC,OAAL,IAAgBI,KAAKI,SAAL,CAAe,cAAf,EAA+B,MAA/B,CAFX,EAGJ,oBAAmBH,UAAW,kBAH1B,CAAN;AAKA;AAjBQ,EADE;;AAqBZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAI,cAAa;AACZX,QACC,8EAFW;AAGZI,OAAK,OAAOC,IAAP,EAAaO,CAAb,EAAgBN,IAAhB,KAAyB;AAC7B,SAAMO,UAAUP,KAAKE,OAAL,CAAc,GAAEb,MAAMmB,IAAK,eAA3B,CAAhB;AACA,SAAMC,SAASC,QAAQH,OAAR,CAAf;AACA,SAAMI,OAAO,iBAAOC,OAApB;AACA;AACA,SAAMC,mBACFJ,MADE;AAELE;AAFK,MAGFrB,GAHE,CAAN;AAKA;AACA,SAAMwB,QAAQ,CAAC,SAAD,EAAY,iBAAZ,EAA+B,cAA/B,CAAd;AACAA,SAAMC,OAAN,CAAcJ,QAAQ;AACrBE,QAAIF,IAAJ,IAAY,EAAZ;AACAK,WAAOC,IAAP,CAAY3B,IAAIqB,IAAJ,KAAa,EAAzB,EACEO,IADF,GAEEH,OAFF,CAEUI,KAAK;AACbN,SAAIF,IAAJ,EAAUQ,CAAV,IAAe7B,IAAIqB,IAAJ,EAAUQ,CAAV,CAAf;AACA,KAJF;AAKA,IAPD;AAQA,SAAM,kBAAGC,SAAH,CAAab,OAAb,EAAuB,GAAEc,KAAKC,SAAL,CAAeT,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAA6B,IAAtD,CAAN;AACA,SAAMd,KAAM,WAAUQ,OAAQ,EAAxB,CAAN;AACA;AAzBW;;AA7BD,GAyDThB,KAzDS,CAAN","file":"makfyfile.js","sourcesContent":["import config from './config'\nimport fs from 'fs-extra'\n\n// TODO get combined config of all plugins\nconst {paths, npm, makfy} = config\n\nexport const commands = {\n\tstartDev: {\n\t\tdesc: 'Run the server in development mode',\n\t\targs: {\n\t\t\tinspect: {\n\t\t\t\ttype: 'flag',\n\t\t\t\tdesc: 'run the dev worker process with the --inspect flag',\n\t\t\t},\n\t\t},\n\t\trun: async (exec, args, util) => {\n\t\t\tconst wpConfPath = util.fixPath(\n\t\t\t\t`${paths.stratokit}/webpack/webpack.config.server.babel.js`\n\t\t\t)\n\t\t\tawait exec(\n\t\t\t\tutil.setEnvVar('NODE_ENV', 'development'),\n\t\t\t\targs.inspect && util.setEnvVar('DEBUG_SERVER', 'true'),\n\t\t\t\t`webpack --config ${wpConfPath} --watch --color`\n\t\t\t)\n\t\t},\n\t},\n\n\t// TODO importDeps: import deps into config after package updates\n\t// it's a bit hard because it needs to write into YAML\n\t// perhaps via an AST editor or by doing search/replace in awk\n\n\t// TODO add plugin packages. Since not all plugins are used in all compilation targets,\n\t// somehow get their dependencies via config but in a way that is not slow when they are not used\n\t// Perhaps all plugins need registration in the config and only then can be loaded into Stratokit?\n\t// Their config would have to be restricted to the npm namespace unless they are activated\n\twriteConfig: {\n\t\tdesc:\n\t\t\t'Write the project configuration (package.json) based on the Stratokit config',\n\t\trun: async (exec, _, util) => {\n\t\t\tconst pkgPath = util.fixPath(`${paths.root}/package.json`)\n\t\t\tconst oldPkg = require(pkgPath)\n\t\t\tconst name = config.appName\n\t\t\t// TODO add makfy scripts\n\t\t\tconst pkg = {\n\t\t\t\t...oldPkg,\n\t\t\t\tname,\n\t\t\t\t...npm,\n\t\t\t}\n\t\t\t// Sort scripts and deps\n\t\t\tconst names = ['scripts', 'devDependencies', 'dependencies']\n\t\t\tnames.forEach(name => {\n\t\t\t\tpkg[name] = {}\n\t\t\t\tObject.keys(npm[name] || {})\n\t\t\t\t\t.sort()\n\t\t\t\t\t.forEach(k => {\n\t\t\t\t\t\tpkg[name][k] = npm[name][k]\n\t\t\t\t\t})\n\t\t\t})\n\t\t\tawait fs.writeFile(pkgPath, `${JSON.stringify(pkg, null, 2)}\\n`)\n\t\t\tawait exec(`? wrote ${pkgPath}`)\n\t\t},\n\t},\n\n\t...makfy,\n}\n"]}