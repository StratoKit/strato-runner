{"version":3,"sources":["../src/index.js"],"names":["dbg","plugins","getPluginFromRegistry","entry","plugin","TypeError","then","name","process","env","NODE_ENV","version","config","requires","load","start","stop","configured","loaded","started","rest","keys","Object","length","join","configureRecurse","configuring","_$","defaults","dep","configure","loadRecurse","startRecurse","stopRecurse","revReqs","reverse","Error","stratokit","registry"],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-disable no-await-in-loop */\nimport debug from 'debug'\nimport config from './config'\nimport registry from './registry'\nimport finalize from './config/finalize'\n\nconst dbg = debug('stratokit')\n\nconst plugins = {}\n\nconst getPluginFromRegistry = async entry => {\n\tlet plugin = registry[entry]\n\tif (!plugin) {\n\t\tthrow new TypeError(`no plugin with the name \"${entry}\" is registered`)\n\t}\n\tif (plugin.then) {\n\t\tplugin = await plugin\n\t\tif (!plugin || typeof plugin.name !== 'string') {\n\t\t\tthrow new TypeError(\n\t\t\t\t`Promise for plugin \"${entry}\" did not yield a plugin`\n\t\t\t)\n\t\t}\n\t\tregistry[entry] = plugin\n\t}\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tconst {\n\t\t\tname,\n\t\t\tversion,\n\t\t\tconfig,\n\t\t\trequires,\n\t\t\tload,\n\t\t\tstart,\n\t\t\tstop,\n\t\t\tconfigured,\n\t\t\tloaded,\n\t\t\tstarted,\n\t\t\t...rest\n\t\t} = plugin\n\t\tconst keys = Object.keys(rest)\n\t\tif (keys.length) {\n\t\t\tthrow new TypeError(\n\t\t\t\t`Plugin ${entry} has these unknown keys: ${keys.join(' ')}`\n\t\t\t)\n\t\t}\n\t}\n\treturn plugin\n}\n\nconst configureRecurse = async plugin => {\n\tif (plugin.configured) return\n\n\tif (plugin.configuring)\n\t\tthrow new TypeError(`circular dependency configuring \"${plugin.name}`)\n\n\tplugin.configuring = true\n\n\t// Height-first, so the plugin loaded first gets to set the value\n\tif (plugin.config) config._$.defaults(plugin.config)\n\n\tif (plugins[plugin.name])\n\t\tthrow new TypeError(\n\t\t\t`naming conflict, there can only be one plugin named \"${plugin.name}`\n\t\t)\n\n\tplugins[plugin.name] = plugin\n\n\tconst {requires = []} = plugin\n\tfor (const name of requires) {\n\t\tconst dep = await getPluginFromRegistry(name)\n\t\tawait configureRecurse(dep)\n\t}\n\n\tdelete plugin.configuring\n\tplugin.configured = true\n}\n\nconst configure = async plugin => {\n\tawait configureRecurse(plugin)\n\tfinalize(config)\n}\n\nconst loadRecurse = async plugin => {\n\tif (plugin.loaded) return\n\n\tconst {requires = []} = plugin\n\tfor (const name of requires) {\n\t\tawait loadRecurse(plugins[name])\n\t}\n\n\tif (plugin.load) {\n\t\tdbg(`loading plugin ${plugin.name}`)\n\t\tawait plugin.load({config, plugin, plugins})\n\t}\n\n\tplugin.loaded = true\n}\n\nconst startRecurse = async plugin => {\n\tif (plugin.started) return\n\n\tconst {requires = []} = plugin\n\tfor (const name of requires) {\n\t\tawait startRecurse(plugins[name])\n\t}\n\n\tif (plugin.start) {\n\t\tdbg(`starting plugin ${plugin.name}`)\n\t\tawait plugin.start({config, plugin, plugins})\n\t}\n\tplugin.started = true\n}\n\nconst load = async plugin => {\n\tawait configure(plugin)\n\tawait loadRecurse(plugin)\n\treturn plugin\n}\n\nconst start = async entry => {\n\tconst plugin = await getPluginFromRegistry(entry)\n\tawait load(plugin)\n\tawait startRecurse(plugin)\n}\n\nconst stopRecurse = async plugin => {\n\tif (!plugin.started) return\n\n\tif (plugin.stop) {\n\t\tdbg(`stopping plugin ${plugin.name}`)\n\t\tawait plugin.stop({config, plugin})\n\t}\n\tdelete plugin.started\n\n\tconst {requires = []} = plugin\n\tconst revReqs = [...requires].reverse()\n\tfor (const name of revReqs) {\n\t\tawait stopRecurse(plugins[name])\n\t}\n}\n\nconst stop = async entry => {\n\tconst plugin = plugins[entry]\n\tif (!plugin) {\n\t\tthrow new Error(`plugin ${entry} was not found/started`)\n\t}\n\tawait stopRecurse(plugin)\n}\n\nconst stratokit = {\n\tconfig,\n\tplugins,\n\tregistry,\n\tconfigure,\n\tload,\n\tstart,\n\tstop,\n}\n\nexport default stratokit\n"]}