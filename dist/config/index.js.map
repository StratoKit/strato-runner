{"version":3,"sources":["../../src/config/index.js"],"names":["confippet","require","mergeWith","NODE_ENV","process","env","defaults","err","code","config","store","_$","dirs","i","dir","push","length","NODE_CONFIG_DIR","console","log","compose","failMissing","warnMissing"],"mappings":";;;;;AAAA;AACA;AACA;;AAEA,MAAMA,YAAYC,QAAQ,qBAAR,CAAlB;;AAEA;AACA,MAAMC,YAAYD,QAAQ,kBAAR,CAAlB;;AAEA,MAAM,EAACE,QAAD,KAAaC,QAAQC,GAAR,IAAe,aAAlC;;AAEAJ,QAAQ,4BAAR;AACA,MAAMK,WAAWL,QAAQ,oBAAR,CAAjB;AACA,IAAI;AACHC,WAAUI,QAAV,EAAoBL,QAAS,cAAaE,QAAS,EAA/B,CAApB;AACA,CAFD,CAEE,OAAOI,GAAP,EAAY;AACb,KAAIA,IAAIC,IAAJ,KAAa,kBAAjB,EAAqC;AACpC,QAAMD,GAAN;AACA;AACD;;AAED;AACA,MAAME,SAAST,UAAUU,KAAV,EAAf;AACAD,OAAOE,EAAP,CAAUL,QAAV,CAAmBA,QAAnB;;AAEA;AACA,MAAMM,OAAO,EAAb;AACA,KAAK,IAAIC,IAAI,CAAR,EAAWC,MAAM,EAAtB,EAA2BA,MAAMV,QAAQC,GAAR,CAAa,mBAAkBQ,CAAE,EAAjC,CAAjC,EAAuE,EAAEA,CAAzE,EAA4E;AAC3ED,MAAKG,IAAL,CAAUD,GAAV;AACA;AACD,IAAIF,KAAKI,MAAL,GAAc,CAAd,IAAmBZ,QAAQC,GAAR,CAAYY,eAAnC,EAAoD;AACnDL,MAAKG,IAAL,CAAUX,QAAQC,GAAR,CAAYY,eAAtB;AACA;AACD,IAAIL,KAAKI,MAAL,GAAc,CAAlB,EAAqB;AACpB;AACAE,SAAQC,GAAR,CAAY,aAAZ,EAA2BP,IAA3B;AACA;;AAED;AACA;AACAH,OAAOE,EAAP,CAAUS,OAAV,CAAkB;AACjBR,OAAMA,KAAKI,MAAL,GAAc,CAAd,IAAmBJ,IADR;AAEjBE,MAAKV,QAAQC,GAAR,CAAYY,eAFA;AAGjBI,cAAa,KAHI;AAIjBC,cAAa;AAJI,CAAlB;;kBAOeb,M","file":"index.js","sourcesContent":["// Everything that Stratokit runs has access to the project configuration\n// Here we make sure the config is loaded before the entry point runs\n// * Only use require() so that Webpack can track dependencies, don't read files\n\nconst confippet = require('electrode-confippet')\n\n// TODO +key merges arrays\nconst mergeWith = require('lodash/mergeWith')\n\nconst {NODE_ENV} = process.env || 'development'\n\nrequire('../transpile/register-yaml')\nconst defaults = require('./defaults/default')\ntry {\n\tmergeWith(defaults, require(`./defaults/${NODE_ENV}`))\n} catch (err) {\n\tif (err.code !== 'MODULE_NOT_FOUND') {\n\t\tthrow err\n\t}\n}\n\n// Load user config with Stratokit defaults\nconst config = confippet.store()\nconfig._$.defaults(defaults)\n\n// This is code from confippet because it did too much\nconst dirs = []\nfor (let i = 0, dir = ''; (dir = process.env[`NODE_CONFIG_DIR_${i}`]); ++i) {\n\tdirs.push(dir)\n}\nif (dirs.length > 0 && process.env.NODE_CONFIG_DIR) {\n\tdirs.push(process.env.NODE_CONFIG_DIR)\n}\nif (dirs.length > 0) {\n\t// eslint-disable-next-line no-console\n\tconsole.log('config dirs', dirs)\n}\n\n// TODO while setting defaults, for all objects targets make sure the config is not `null`\n// (prevent yaml empty object overwriting defaults)\nconfig._$.compose({\n\tdirs: dirs.length > 0 && dirs,\n\tdir: process.env.NODE_CONFIG_DIR,\n\tfailMissing: false,\n\twarnMissing: true,\n})\n\nexport default config\n"]}