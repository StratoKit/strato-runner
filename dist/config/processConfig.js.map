{"version":3,"sources":["../../src/config/processConfig.js"],"names":["each","isObjectLike","get","isFunction","isUndefined","isString","isEmpty","defaults","require","fs","processObj","obj","data","depthPath","depth","join","config","context","value","key","push","pop","resolve","tmpl","path","params","split","startsWith","substr","x","missing","length","map","test","newV","slice","includes","more","replace","match","processConfig","options","process","argv","cwd","env","now","Date","readFile","enc","readFileSync","trim","toString","Error","getEnv","cc","toLowerCase","toUpperCase","maxRun","i","module","exports"],"mappings":"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","file":"processConfig.js","sourcesContent":["// From https://github.com/electrode-io/electrode-confippet/blob/master/lib/process-config.js\n'use strict'\n\nconst {\n\teach,\n\tisObjectLike,\n\tget,\n\tisFunction,\n\tisUndefined,\n\tisString,\n\tisEmpty,\n\tdefaults,\n} = require('lodash')\nconst fs = require('fs')\n\nfunction processObj(obj, data) {\n\tconst depthPath = data.depth.join('.')\n\tconst {config, context} = data\n\n\teach(obj, (value, key) => {\n\t\tif (isObjectLike(value)) {\n\t\t\tdata.depth.push(key)\n\t\t\tprocessObj(value, data)\n\t\t\tdata.depth.pop()\n\t\t\treturn\n\t\t}\n\n\t\tconst resolve = tmpl => {\n\t\t\tconst [path, ...params] = tmpl.split(':')\n\n\t\t\tif (path.startsWith('-')) {\n\t\t\t\t// plain string\n\t\t\t\treturn path.substr(1)\n\t\t\t}\n\n\t\t\tconst x = get(context, path)\n\n\t\t\tif (isFunction(x))\n\t\t\t\treturn x({\n\t\t\t\t\tcontext,\n\t\t\t\t\tconfig,\n\t\t\t\t\tobj,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\ttmpl,\n\t\t\t\t\tparams,\n\t\t\t\t\tdepthPath,\n\t\t\t\t\tresolve,\n\t\t\t\t})\n\t\t\tif (isUndefined(x)) {\n\t\t\t\tdata.missing.push({path: `${depthPath}.${key}`, value, tmpl})\n\t\t\t\treturn ''\n\t\t\t}\n\t\t\treturn params.length ? `${x}${params.map(x => resolve(x)).join('')}` : x\n\t\t}\n\n\t\tif (isString(value)) {\n\t\t\tif (/^\\{\\{[^}]+}}$/.test(value)) {\n\t\t\t\tconst newV = resolve(value.slice(2, -2))\n\t\t\t\tobj[key] = newV\n\t\t\t\tif (typeof newV === 'string' && newV.includes('{{')) {\n\t\t\t\t\tdata.more++\n\t\t\t\t}\n\t\t\t} else if (value.includes('{{')) {\n\t\t\t\tobj[key] = value.replace(/\\{\\{([^}]+)}}/g, (match, tmpl) => {\n\t\t\t\t\tconst newV = resolve(tmpl)\n\t\t\t\t\tif (typeof newV === 'string' && newV.includes('{{')) {\n\t\t\t\t\t\tdata.more++\n\t\t\t\t\t}\n\t\t\t\t\treturn newV\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t})\n}\n\nfunction processConfig(config, options) {\n\tif (isEmpty(config)) {\n\t\treturn []\n\t}\n\n\toptions = options || {}\n\n\tconst context = {\n\t\tconfig,\n\t\tprocess,\n\t\targv: process.argv,\n\t\tcwd: process.cwd(),\n\t\tenv: process.env,\n\t\tnow: Date.now,\n\t\treadFile: ({params}) => {\n\t\t\tif (params[0]) {\n\t\t\t\tconst enc = params[1] || 'utf8'\n\t\t\t\treturn fs.readFileSync(params[0].trim()).toString(enc.trim())\n\t\t\t}\n\t\t\tthrow new Error('config file readFile template missing filename')\n\t\t},\n\t\tgetEnv: ({params}) => {\n\t\t\tif (params[0]) {\n\t\t\t\tlet value = process.env[params[0]]\n\t\t\t\tif (value) {\n\t\t\t\t\tconst cc = params[1]\n\t\t\t\t\tif (cc === 'lowerCase' || cc === 'LC') {\n\t\t\t\t\t\tvalue = value.toLowerCase()\n\t\t\t\t\t} else if (cc === 'upperCase' || cc === 'UC') {\n\t\t\t\t\t\tvalue = value.toUpperCase()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value\n\t\t\t}\n\t\t},\n\t}\n\n\tdefaults(context, options.context)\n\n\tconst data = {\n\t\tconfig,\n\t\tcontext,\n\t\toptions,\n\t\tmore: 1,\n\t\tmissing: [],\n\t\tdepth: ['config'],\n\t}\n\tconst maxRun = 20\n\n\tfor (let i = 0; data.more > 0; i++) {\n\t\tif (i >= maxRun) {\n\t\t\tthrow new Error(`Unable to process config after ${maxRun} passes.`)\n\t\t}\n\t\tdata.more = 0\n\t\tprocessObj(config, data)\n\t}\n\n\treturn data.missing\n}\n\nmodule.exports = processConfig\n"]}