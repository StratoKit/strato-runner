# DO NOT EDIT - READ BELOW
# This is the stratokit configuration
# This holds sensible defaults and some explanation about them
# Project-specific settings should go in separate files
# See https://github.com/electrode-io/electrode-confippet for explanation
# TODO some basic instructions

# App version
version: 0.1.0
appName: StratoApp

# Languages we should support
languages: [en]

# Translation sections and their graphql name
sections:
  a: APP
  c: COUNTRY

paths:
  root: '{{cwd}}'
  stratokit: '{{config.paths.root}}/lib'
  app: '{{config.paths.root}}/src'
  assets: '{{config.paths.root}}/assets'
  state: '{{config.paths.app}}/redux'
  icons: '{{config.paths.assets}}/icons' # TODO move to plugin
  upload: '{{config.paths.build.root}}/upload'
  build:
    root: '{{config.paths.root}}/build'
    cache: '{{config.paths.root}}/build/cache'
    client: '{{config.paths.root}}/build/client'
    dll: '{{config.paths.root}}/build/dll'
    server: '{{config.paths.root}}/build/server'
  nodeModules: '{{config.paths.root}}/node_modules'

stratokit:
  # The current config stage. CONFIG - LOAD - RUN
  stage: CONFIG

  plugins: []

  server:
    entry: 'stratokit/server'
    host: localhost
    port: 3000

    # SocketCluster options
    logLevel: 1
    workers: 1
    brokers: 1
    socketChannelLimit: 1000

    # Basic authentication - only meant for single user
    requireBasicAuth:
      # message
      # name
      # pass

  # TODO plugin
  db:
    file: '{{config.paths.build.root}}/data-{{deployment}}.db'

  # TODO plugin
  sessions:
    # https://github.com/rawberg/connect-sqlite3/blob/master/Readme.md#Options
    dir: '{{config.paths.build.root}}'

  graphiql: true

  webpack:
    publicPath: '/_'

    alias:
      app: '{{config.paths.app}}'
      stratokit: '{{config.paths.stratokit}}'
      assets: '{{config.paths.assets}}'
      state: '{{config.paths.state}}'
      # Optimize lodash-es, everybody should use lodash
      lodash-es: 'lodash'
      # See https://github.com/lodash/lodash-webpack-plugin/issues/101
      lodash.flatten: 'lodash/flatten'
      lodash.pick: 'lodash/pick'
      lodash.keys: 'lodash/keys'
      lodash.isarguments: 'lodash/isArguments'
      lodash.isarray: 'lodash/isArray'
      lodash._getnative: 'lodash/_getnative'

    use:
      urlLoader: 1000
      css:
        enabled: true
        sass: true
        modules: true
        autoprefixer: true
      svgo:
        enabled: true

    extensions:
      json: [json]
      yaml: [yaml]
      raw: [txt]
      assets: [png, jpg, jpeg, gif, ttf, eot, woff, woff2, mp3, wav, svg]
      css: [css, scss, sass]
      svg: [svg]
      sass: [scss, sass]
      js: [js, jsx]

    # any globals etc
    defines:
      __IN_WEBPACK__: true
      __CONFIG__:
        languages: '{{config.languages}}'
        sections: '{{config.sections}}'
        name: '{{config.appName}}'
        version: '{{config.version}}'
        graphiql: '{{config.stratokit.graphiql}}'

    # any loaders you like
    loaders: []

    # these keys add to the default config. TODO
    # eg. assets: {exclude: 'foo', loader: 'bar'}
    # or. assets: {replaceExclude: 'foo', replaceLoader: 'bar'}
    loaderConfig: {}
babel:
  transpilePlugins: true
  # The options provided to 
  options: 
    presets:
      - - env
        - targets:
            node: 'current'
          useBuiltins: true
    plugins:
      - transform-object-rest-spread

npm:
  version: '{{config.version}}'
  scripts:
    # use babel-register until https://github.com/xaviergonz/makfy/issues/1
    start: 'node -r babel-register ./node_modules/.bin/makfy startDev'
    start-inspect: 'node -r babel-register ./node_modules/.bin/makfy startDev --inspect'
    writeConfig: 'node -r babel-register ./node_modules/.bin/makfy writeConfig'
    makfy: 'node -r babel-register ./node_modules/.bin/makfy'

    prod: 'npm run dash:prod'
    'dash:dev': 'NODEJS_DASH=true nodejs-dashboard -- npm run start:dev'
    'dash:prod': 'NODEJS_DASH=true nodejs-dashboard -- npm run start:prod'
    'start:dev': 'NODE_ENV=development webpack --config ./lib/webpack/webpack.config.server.babel.js --watch'
    'start:dev-client': NODE_ENV=development webpack --config ./lib/webpack/webpack.config.dev.babel.js --watch
    'start:prod': NODE_ENV=production node ./build/server/server.js
    build: "concurrently 'npm run build:client' 'npm run build:server'"
    build-min: "concurrently 'npm run build:client-min' 'npm run build:server-min'"
    clear-cache: rimraf build/cache ~/.babel.json
    bs: 'npm run build && npm run prod'
    'build:client': 'NODE_ENV=production webpack --bail --config ./lib/webpack/webpack.config.prod.babel.js'
    'build:client-min': 'NODE_ENV=production MINIFY=true webpack --bail --profile --config ./lib/webpack/webpack.config.prod.babel.js'
    analyze: webpack-bundle-analyzer build/client/_webpack_stats.json -m static -r build/client/_webpack_stats.html
    analyze-dev: 'curl -o build/_webpack_stats-dev.json http://localhost:3000/_/_webpack_stats.json && webpack-bundle-analyzer build/_webpack_stats-dev.json -m static -r build/_webpack_stats-dev.html'
    'build:dll': 'NODE_ENV=development webpack --bail --config ./lib/webpack/webpack.config.dll.babel.js'
    'build:server': 'NODE_ENV=production webpack --bail --config ./lib/webpack/webpack.config.server.prod.babel.js'
    'build:server-min': 'NODE_ENV=production MINIFY=true webpack --bail --profile --config ./lib/webpack/webpack.config.server.prod.babel.js'
    lint: "xo 'src/**/*.js' 'lib/**/*.js' 'src/**/*.jsx' 'lib/**/*.jsx'"
    lint-fix: "xo --fix 'src/**/*.js' 'lib/**/*.js' 'src/**/*.jsx' 'lib/**/*.jsx'"

  devDependencies:
    assets-webpack-plugin: ^3.5.1
    autoprefixer: ^7.1.1
    babel-cli: ^6.24.1
    babel-core: ^6.24.1
    babel-eslint: ^7.2.3
    babel-loader: ^7.0.0
    babel-plugin-lodash: ^3.2.11
    babel-plugin-styled-components: ^1.1.4
    babel-plugin-syntax-dynamic-import: '*'
    babel-plugin-transform-class-properties: ^6.24.1
    babel-plugin-transform-decorators-legacy: ^1.3.4
    babel-plugin-transform-es2015-destructuring: ^6.23.0
    babel-plugin-transform-es2015-parameters: ^6.24.1
    babel-plugin-transform-export-extensions: ^6.22.0
    babel-plugin-transform-object-rest-spread: ^6.23.0
    babel-plugin-transform-react-jsx-self: ^6.22.0
    babel-plugin-transform-react-jsx-source: ^6.22.0
    babel-plugin-transform-regenerator: ^6.24.1
    babel-plugin-transform-runtime: ^6.23.0
    babel-plugin-webpack-alias: ^2.1.2
    babel-preset-babili: ^0.1.2
    babel-preset-env: ^1.5.1
    babel-preset-latest: ^6.24.1
    babel-preset-react: ^6.24.1
    babel-preset-stage-2: ^6.24.1
    babel-register: ^6.24.1
    concurrently: ^3.4.0
    css-loader: ^0.28.4
    extract-text-webpack-plugin: ^2.1.0
    file-loader: ^0.11.1
    hard-source-webpack-plugin: ^0.3.12
    json-loader: '*'
    yaml-loader: '*'
    node-object-hash: ^1.2.0
    node-sass: ^4.5.3
    nodejs-dashboard: ^0.4.1
    null-loader: 0.1.1
    postcss-loader: '1'
    postcss-modules-values: 1.2.2
    raw-loader: 0.5.1
    react-hot-loader: next
    redbox-react: ^1.3.7
    rimraf: ^2.6.1
    sass-loader: ^6.0.5
    start-server-webpack-plugin: ^2.2.0
    stats-webpack-plugin: ^0.6.0
    style-loader: ^0.18.1
    svg-sprite-loader: ^0.3.0
    svgo: ^0.7.2
    svgo-loader: ^1.2.1
    unused-files-webpack-plugin: ^3.0.1
    url-loader: ^0.5.8
    webpack: ^2.6.1
    webpack-bundle-analyzer: ^2.8.2
    webpack-cleanup-plugin: '*'
    webpack-dev-middleware: ^1.10.2
    webpack-hot-middleware: ^2.18.0
    webpack-node-externals: ^1.6.0

    # TODO plugin
    xo: ^0.18.2
    eslint: ^3.19.0
    eslint-config-xo-meatier: 0.2.2
    eslint-config-xo-react: ^0.12.0
    eslint-import-resolver-webpack: ^0.8.1
    eslint-plugin-babel: ^4.1.1
    eslint-plugin-import: ^2.3.0
    eslint-plugin-react: ^7.0.1

  dependencies:
    # Transpilation
    babel-polyfill: ^6.23.0
    babel-runtime: ^6.23.0
    source-map-support: ^0.4.15

    # Utility
    bluebird: ^3.5.0
    debug: ^2.6.8
    es6-promisify: ^5
    isomorphic-fetch: 2.2.1
    jsurl: 'wmertens/jsurl#jsurl2'
    lodash: ^4.17.4
    mz: ^2.4.0

    # Config
    electrode-confippet: ^1.5.0
    json5: ^0.5.1
    makfy: ^1.1.11
    js-yaml: '*'

    # DB
    sqlite: ^2.8.0
    uuid: ^3.0.0

    # Express
    bcrypt: ^1.0.2
    body-parser: ^1.17.2
    compression: 1.6.2
    connect-sqlite3: ^0.9.9
    cookie-parser: ^1.4.3
    cors: ^2.8.3
    express: ^4.15.3
    express-jwt: ^5.3.0
    express-session: ^1.15.3
    morgan: ^1.8.2
    serve-favicon: ^2.4.3
    socketcluster: ^5.13.1
    socketcluster-client: ^5.5.0

    # graphql + i18n
    apollo-client: ^1.2.2
    google-libphonenumber: ^2.0.15
    graphiql: ^0.10.2
    graphql: ^0.9.6
    graphql-server-express: ^0.7.2
    graphql-tag: ^2.0.0
    graphql-type-json: ^0.1.4
    i18n-iso-countries: ^1.11.1
    in-browser-language: ^1.0.2
    locale: ^0.1.0
    react-deep-force-update: ^2.0.1
    react-keydown: ^1.7.3

    # React
    react: ^15.5.4
    react-addons-perf: ^15.4.2
    react-apollo: ^1.2.0
    react-dom: ^15.5.4
    react-redux: ^5.0.5
    react-router: ^4.1.1
    react-router-dom: ^4.1.1
    redux: 3.6.0
    redux-logger: ^3.0.6
    redux-mediaquery: ^0.10.0
    redux-persist: ^4.8.0
    redux-thunk: ^2.2.0
    styled-components: ^2.0.0

    # Table
    reactabular-column-extensions: ^8.9.3
    reactabular-resizable: ^8.9.0
    reactabular-table: ^8.9.0
    reselect: '<3.0.0' # also used elsewhere as lazy eval in react, should be other project
    searchtabular: ^1.5.0
    sortabular: ^1.4.0
    table-resolver: ^3.1.0
    treetabular: ^3.3.0
